[tool.isort]
skip_glob = ["__init__.py"]
profile = "black"

[tool.black]
line-length = 140
target-version = ['py312']
exclude = '''
    /(
        \.git
      | \.hg
      | \.mypy_cache
      | \.tox
      | \.venv
      | _build
      | buck-out
      | build
      | dist
      | models/*
      | alembic/*
    )/
'''

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = true
ignore-nested-classes = true
ignore-setters = false
fail-under = 20
exclude = [
    "tests/*",
    "alembic/*",
    "app/schemas/*"
]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 1
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8 comprehensions
    "B",  # flake8 bugbear
    "UP", # automatically upgrade syntax for newer versions of the language
    "ASYNC", # flake8 async
    "C4", # flake8 omprehensions
    "ISC", # flake8 implicit str concat
]

target-version = "py312"

ignore = [
    "E501",  # line too long, handled by black,
    "B904",  # * Within an except clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    "B008",  # do not perform function calls in argument defaults. Ignored to allow dependencies in FastAPI
    "B024", # Do not fail for abstract classes with no abstract methods
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "E402"]  # Ignore `E402` (import violations) in all `__init__.py` files
"locustfile.py" = ["B012"]  # B012 `break` inside `finally` blocks cause exceptions to be silenced

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
fail_under = 0
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

[tool.codespell]
skip = '.git,*.env'
